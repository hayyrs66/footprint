---
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);


---

<header>
  {
    !session && (
      <nav>
        <a id="sign-in" href="" class="link">
          Iniciar sesion
        </a>
      </nav>
    )
    }

    {
      session && (
        <nav class="menu" id="menu">
        <a
          href="
          "
          class="profile-link"
          id="profile"
        >
          PERFIL
        </a>
        <div class="sub-menu">
          <div class="grid-1">
            <img src="/glass.svg" alt="glass" class="glass"/>
            <img src={session.user.image} alt="" class="avatar"/> 
            <h3>{session.user.name}</h3>
          </div>
          <div class="grid-2">
            <a href="#">
              <div class="option">
                <h4>Dashboard</h4>
                <p>Visualiza las estadísticas de tu huella ecológica.</p>
              </div>
              </a>
            <button id="logout">Cerrar sesión</button>
          </div>
        </div>
      </nav>
      )
    }
  
  <a class="logo link">
    <h1>nature</h1>
  </a>
  <nav>
    <a href="" class="link">Acerca de</a>
    <a href="" class="link">Contacto</a>
  </nav>
</header>

<script>

  const { signIn, signOut } = await import("auth-astro/client");

  if (document.getElementById("sign-in")){

    document
    .getElementById("sign-in")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      await signIn("google", { callbackUrl: "/" });
    });
    
  }

    if (document.getElementById("logout")) {  // Check if the element exists
   document.getElementById("logout").addEventListener("click", async () => {
    await signOut({ callbackUrl: "/" });
    });
}

  if (document.getElementById("profile")) {
  const profile = document.getElementById("profile");
  const subMenu = document.querySelector(".sub-menu") as HTMLElement;

  profile.addEventListener("mouseover", () => {
    subMenu.style.display = "grid";
    subMenu.classList.add("visible");
    subMenu.classList.remove("hidden");
  });

  profile.addEventListener("mouseout", () => {
    subMenu.classList.add("hidden");
    subMenu.classList.remove("visible");


  });

  subMenu.addEventListener("mouseover", () => {
    subMenu.style.display = "grid"; // Mantener visible el submenú cuando el mouse está sobre él
    subMenu.classList.add("visible");
    subMenu.classList.remove("hidden");

  });

  subMenu.addEventListener("mouseout", () => {
    subMenu.classList.add("hidden");
    subMenu.classList.remove("visible");

  });
  }

    
</script>

<style>
  .menu {
    display: flex;
    justify-content: flex-start;
    width: 100%;
    height: 100%;
    align-items: center;
    flex-grow: 1;
    flex-basis: 0;
    gap: 1rem;
    position: relative;
  }
  .sub-menu {
    display: none;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    background-color: #101309;
    width: 100%;
    height: auto;
    position: absolute;
    top: calc(100%);
    left: 0;
    border-radius: 0.4rem;
    padding: 1.5rem 1rem;
    gap: 1rem;
    margin-top: 1rem;
    border: 1px solid #ebff6d;
    filter: drop-shadow(0 20px 13px rgba(0, 0, 0, 0.305)) drop-shadow(0 8px 5px rgba(0, 0, 0, 0.282));
  }

  .sub-menu.hidden {
    animation: fadeOut 200ms cubic-bezier(0.3, 0.2, 0.2, 0.8) forwards;
  }

  .sub-menu.visible {
    animation: fadeIn 200ms cubic-bezier(0.3, 0.2, 0.2, 0.8) forwards;
  }
  
  .sub-menu::after{
    content: "";
    width: 100%;
    height: 1rem;
    position: absolute;
    top: 0;
    left: 0;
    margin-top: -1rem;
  }

   .grid-1 {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%
    align-items: center;
    background-color: #101309;
    border-radius: 0.4rem;
    background: linear-gradient(200deg,  #101309 0%, rgba(255, 255, 255, 0.1) 100%);
    padding: 1rem;
  }

 .grid-2 {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .option{
    padding: 0.8rem;
    border-radius: 0.4rem;
    transition: background-color 100ms cubic-bezier(0.3, 0.2, 0.2, 0.8);
  }
  .option:hover{
    background-color: rgba(255, 255, 255, 0.1);
  }

   .option h4 {
     color: #ebff6d;
     font-size: 16px;
     font-weight: 500;
     cursor: pointer;
     letter-spacing: -0.02rem;
     padding-bottom: 0.2rem;
    }
    
    .option p {
      color: #faffd7;
      font-size: 14px;
      font-weight: 400;
      cursor: pointer;
      letter-spacing: -0.01rem;  
      line-height: 1.2;
      margin-top: 0.5rem
    }
   .grid-1 .avatar {
    aspect-ratio: 1/1;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: block;
  }

   .grid-1 .glass {
    width: 20px;
    height: 20px;
    margin-bottom: 1.5rem;
  }

   .grid-1 h3 {
    color: #ebff6d;
    font-size: 16px;
    font-weight: 500;
    letter-spacing: -0.01rem;
    margin-top: 1rem
  }

  .grid-2 button{
    all: unset;
    color: rgb(254, 92, 92);
    font-size: 15px;
    font-weight: 600;
    cursor: pointer;
    padding-left: 0.8rem;
    width: fit-content;
    transition: color 100ms cubic-bezier(0.3, 0.2, 0.2, 0.8);
  }

  .grid-2 button:hover{
    color: rgb(255, 61, 61);
  }

  .profile-link{
    display: inline-block;
    position: relative;
    color: #ebff6d;
    font-size: 15px;
    font-weight: 400;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: -0.03rem;
    padding-bottom: 0.2rem;
  }
  .link {
    display: inline-block;
    position: relative;
    color: #ebff6d;
    font-size: 15px;
    font-weight: 400;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: -0.03rem;
    padding-bottom: 0.2rem;
  }

  .link::before {
    content: "";
    position: absolute;
    right: 0;
    bottom: 0;
    width: 0;
    height: 0.05rem;
    background-color: #ebff6d;
    transition: width 0.3s cubic-bezier(0.3, 0.2, 0.2, 0.8);
  }

  .link:hover::before {
    width: 100%;
    left: 0;
    margin-right: auto;
  }

  h1 {
    color: #ebff6d;
    font-size: 25px;
    font-weight: 500;
  }
  header {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 7.563rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 100;
  }
  nav:first-child {
    display: flex;
    width: 100%;
    height: 100%;
    justify-content: flex-start;
    align-items: center;
    flex-grow: 1;
    flex-basis: 0;
    gap: 2rem;
  }

  nav:last-child {
    display: flex;
    width: 100%;
    height: 100%;
    justify-content: flex-end;
    align-items: center;
    flex-grow: 1;
    flex-basis: 0;
    gap: 2rem;
  }

  @keyframes fadeOut {
    to{
      display: none;
      opacity: 0;
    }
  }

  @keyframes fadeIn {
    0%{
      opacity: 0;
    }
    100%{
      opacity: 1;
    }
  }
  
</style>
