---
import Loader from "../components/Loader.astro";
import CircularProgress from "../components/CircularProgress.astro";
import { getSession } from "auth-astro/server";
import { Icon } from "astro-icon/components";

const session = await getSession(Astro.request);

const { userStorage, lastIndex, footprint } = Astro.props;
---

<section class="w-full h-full mt-[8rem] bg-bg-gray px-[4rem]">
  <!-- <Loader /> -->
  <h1
    class="text-primary text-6xl tracking-tighter font-medium title-text mb-1"
  >
    Hello {session.user.name}!
  </h1>
  <p class="text-white font-medium tracking-tighter text-lg mb-5">
    These are your data.
  </p>
  <div class="flex gap-2">
    <div
      class="flex flex-col justify-center items-center border border-primary/50 rounded-[5px] py-5 px-12
      min-w-[250px]"
    >
      <p
        class="text-white font-bold text-lg tracking-tighter storageContainer mb-5"
      >
        Drive Usage
      </p>
      <div>
        <CircularProgress
          limit={userStorage[lastIndex].limit}
          usage={userStorage[lastIndex].value.toFixed(2)}
        />
      </div>
      <p
        class="text-white font-medium text-sm tracking-tighter storageContainer mt-5"
      >
        {userStorage[lastIndex].value.toFixed(2)} GB of {
          userStorage[lastIndex].limit.toFixed(2)
        } GB
      </p>
    </div>
    <div
      class="flex justify-start items-center flex-col border border-red-400 rounded-[5px] py-5 px-12 min-w-[250px]"
    >
      <p class="text-white font-bold text-lg tracking-tighter">Footprint</p>
      <div class="flex justify-center items-center flex-col w-full h-full">
        <span class="text-red-400 text-4xl font-extrabold tracking-tighter"
          >{footprint.toFixed(2)}</span
        >
        <span class="text-red-400 tracking-tighter font-medium"
          >g of CO2 per GB</span
        >
        <Icon class="text-red-400" name="leave" width={50} height={50} />
      </div>
    </div>
  </div>
  <!-- How to reduce it -->
  <div class="mt-10">
    <a
      href="#reduce"
      class="flex gap-2 items-center text-primary/70 hover:text-primary transition-colors font-medium tracking-tighter text-2xl mb-2 cursor-pointer"
    >
      Learn how to reduce it
      <Icon name="arrow" width={20} height={20} />
    </a>
  </div>
  <!-- Graph -->
  <div class="w-full h-full mt-10 mb-10 gap-5">
    <div
      class="flex flex-col justify-center w-full h-full rounded-md py-6 min-h-64"
    >
      <h3 class="text-2xl text-white tracking-tighter font-medium mb-5">
        Your carbon footprint over the time
      </h3>
      <figure
        data-storage={JSON.stringify(userStorage)}
        id="graph-1"
        class="w-full h-full relative min-h-[400px] border border-slate-800"
      >
      </figure>
    </div>
  </div>
</section>

<script>
  import { ColorType, createChart } from "lightweight-charts";
  const graphContainer1 = document.getElementById("graph-1");
  const data = [];

  if (graphContainer1) {
    const chart = createChart(graphContainer1, {
      layout: {
        textColor: "#FFFFFF",
        background: { type: ColorType.Solid, color: "#08090A" },
      },
      grid: {
        vertLines: { color: "#1f1f1f" },
        horzLines: { color: "#1f1f1f" },
      },
      autoSize: true,
    });

    const baselineSeries = chart.addBaselineSeries({
      baseValue: { type: "price", price: 25 },
      topLineColor: "rgba( 239, 83, 80, 1)",
      topFillColor1: "rgba(239, 83, 80, 0.678)",
      topFillColor2: "rgba(166, 38, 38, 0.05)",
      bottomLineColor: "#EBFF6D",
      bottomFillColor1: "rgba(117, 166, 38, 0.05)",
      bottomFillColor2: "#ecff6d33",
    });

    graphContainer1.dataset.storage &&
      JSON.parse(graphContainer1.dataset.storage).forEach((entry) => {
        data.push({ time: entry.time, value: entry.value });
      });

    if (data.length > 0) {
      baselineSeries.setData(data);
    }

    baselineSeries.setData(data);

    chart.timeScale().fitContent();
  }
</script>
