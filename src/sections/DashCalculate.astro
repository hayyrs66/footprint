---
import Loader from "../components/Loader.astro";
import { getSession } from "auth-astro/server";
import { db, Storage } from "astro:db";
import { eq } from "astro:db";

const session = await getSession(Astro.request);

const userId = session.user.id;

const userStorage = {};

const userDataDb = await db
  .select()
  .from(Storage)
  .where(eq(Storage.userId, userId));

userDataDb.forEach((data) => {
  const entry = {
    // time: data.calculatedAt.toISOString().split("T")[0],
    time:  new Date(data.calculatedAt).getTime() / 1000,
    value: data.storage / 1024 / 1024 / 1024,
  };

  if (!userStorage[data.userId]) {
    userStorage[data.userId] = [];
  }

  userStorage[data.userId].push(entry);
});

const lastIndex = userStorage[userId].length - 1;
const footprint = userStorage[userId][lastIndex].value * 0.8;

console.log(userStorage);
---

<section class="w-full h-screen mt-[8rem] bg-bg-gray px-[4rem]">
  <!-- <Loader /> -->
  <div class="flex items-center gap-5">
    <h1 class="text-primary text-6xl tracking-tighter font-medium title-text">
      Hello {session.user.name}!
    </h1>
    <img
      src={session.user.image}
      class="picture rounded-full"
      width="60"
      height="60"
      alt="user profile picture"
    />
  </div>
  <div>
    <p class="text-white font-medium text-lg tracking-tighter storageContainer">
      Your storage usage: {userStorage[userId][lastIndex].value.toFixed(2)} GB
    </p>
    <p class="text-white font-medium text-lg tracking-tighter">
      Your footprint is: <span class="text-[#ef5350]"
        >{footprint.toFixed(2)} of CO2 per GB</span
      >
    </p>
  </div>
  <!-- Grid cols -->
  <div class="w-full h-auto grid grid-cols-2 mt-10 gap-5">
    <div
      class="flex flex-col justify-center w-full h-full border border-slate-800 rounded-md p-6 min-h-64"
    >
      <h3 class="text-2xl text-white tracking-tighter font-medium mb-5">
        Carbon Footprint over Time
      </h3>
      <figure id="graph-1" class="w-full h-full border border-slate-800">
      </figure>
    </div>
    <div>
      <figure id="graph-2"></figure>
    </div>
  </div>
</section>

<script>
  import {
    ColorType,
    createChart,
    type BaselineData,
    type DeepPartial,
    type Time,
    type TimeChartOptions,
  } from "lightweight-charts";
  const graphContainer1 = document.getElementById("graph-1");
  const graphContainer2 = document.getElementById("graph-2");

  const chart = createChart(graphContainer1, {
    layout: {
      textColor: "#FFFFFF",
      background: { type: ColorType.Solid, color: "#08090A" },
    },
    grid: { vertLines: { color: "#1f1f1f" }, horzLines: { color: "#1f1f1f" } },
  });

  const data = [
  { time: 1714898530, value: 1.5046508070081472 },
  { time: 1714901913, value: 1.5046508070081472 }
  ];

  const baselineSeries = chart.addBaselineSeries({
    baseValue: { type: "price", price: 25 },
    topLineColor: "rgba( 239, 83, 80, 1)",
    topFillColor1: "rgba( 235, 255, 109, 0.28)",
    topFillColor2: "rgba( 38, 166, 154, 0.05)",
    bottomLineColor: "#EBFF6D",
    bottomFillColor1: "rgba( 239, 83, 80, 0.05)",
    bottomFillColor2: "rgba( 239, 83, 80, 0.28)",
  });

  baselineSeries.setData(data as BaselineData<Time>[]);

  chart.timeScale().fitContent();
</script>
